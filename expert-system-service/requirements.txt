Здатність системи відповідати на питання користувача, що стосуються виконаної роботи, ґрунтується на наступних функціях:
- вивід на екран правил, активізованих на будь-якій стадії консультації;
- запис і збереження в процесі роботи активізованих правил і пов'язаних з ними подій, питань, які ставляться, і сформованих висновків;
- використання індексації правил, яка дає можливість витягнути певне правило у відповідь

Механізм висновку здійснює:
•	перегляд і зіставлення фактів з робочої пам'яті і правил бази знань;
•	спрацьовування правила;
•	додавання в робочу пам'ять нових отриманих фактів;
•	визначення порядку перегляду і застосування правив;
•	вирішення конфлікту у разі застосовності декілька правив;
•	запит у користувача додаткової інформації, необхідної для спрацьовування чергового правила;
•	звернення до процедуральних дій, пов'язаних з висновком правила.

Спрощений алгоритм функціонування такої експертної системи має вигляд :
1. У робочу пам'ять через інтерфейс вводяться користувачем значення вихідних змінних.
2. У базі знань визначаються ті правила, в умовах яких присутні змінні, наявні в робочій пам'яті.
3. Проводиться спроба застосування правил за допомогою машини логічного висновку
і занесення результатів в робочу пам'ять.
4. Якщо застосування хоча б одного правила виявилося успішним, то перехід до п.2.
5. Якщо досягнуте стан робочої пам'яті (бази даних) не дозволяє більше застосувати жодне з правил бази знань,
то процес логічного висновку закінчується і диспетчер приймає рішення про видачу користувачеві
через інтерфейсний блок інформації, отриманої в результаті застосування правил.

Ok, I want to use this operators in such way. For example, we have such rules in expert system:
NAME computer_turn_on IF computer_doesnt_turn_on THEN GOTO check_power_source ELSE GOTO is_ok
NAME is_ok IF is_ok THEN DO success ELSE DO specifie_another_problem
NAME check_power_source IF is_laptop THEN GOTO plug_charger ELSE GOTO turn_on_the_computer_in_outlet
NAME plug_charger IF charging THEN GOTO wait_some_time_to_charge ELSE DO go_to_service_to_fix_laptop
NAME wait_some_time_to_charge  IF wait_time_ended THEN GOTO computer_turn_on
Do you understand such rule system?

Добрий вечір. Вимоги наступні :
1) Дерево рішень має бути намальовано в протоколі (як завгодно, в ворді, хоч від руки...) . Не менше 3 основних гілок,
глибина в середньому 7 кроків ( якась гілка може більше, якась-менше).
2) Ввод даних -в інтерфейсі (за ввод та вивод з консолі-менше балів), бо наявність дружнього інтерфейсу-одна з вимог до ЕС.
3) Дані, що вводяться, мають різний формат (не просто і не тільки відповіді типу "так" і "ні"):
на якесь питання системи -цифру вводите, на якесь  інше-обираєте зі списку...
4) Бажано, щоб гілки дерева не були абсолютно ізольовані одна від одної.
Ну тобто, щоб були ситуації, де ви спочатку йдете по одній гілці, а потім-переходите на іншу.
5) Результат має виводитись не один, а 2-3 з різними коефіцієнтами впевненості.
Наприклад: Пневмонія 0.6, Бронхіт 0.45
(в протоколі лише пояснити, як врешті ви рахуєте ці коефіцієнти- це ваше особиста справа )
6) ЕС програмуєте самі,  не використовуєте готові інструментарі, що збирають вам систему .
Тобто таку роботу я теж прийму, але не на високий бал (балів до 18). А вся робота важить до 30 балів.
7) Тема-будь-яка.  Хід міркувань-прямий чи зворотній (я ще не розповідала  в лекції, це в наступній буде, постараюсь записати відео, надішлю раніше,ніж наступна середа).
Оформлення, основні моменти:
    1)що виконує ваша система (для чого вона)
    2) на чому писали
    3) дерево рішень
    4) скріни режима консультації -пара гілок , ну і рішення яке вона дає.
    5) основні шматки лістінгу. Висновки.
8) Для оцінки вище 20 балів-тільки захист роботи. З кожним про це домовляємось в телеграмі.
Приймати можу не тільки в середу, а й в понеділок-вівторок (четвер, п'ятниця-не можу).
Да...забула...формування пояснень прийнятого рішення-НЕ ПОТРІБНО (це дуже складно).